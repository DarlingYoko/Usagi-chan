import discord, pytz
from discord.ext import commands, tasks
from bin.converters import *
from openpyxl import load_workbook
from random import choice
from os import listdir
from discord import File
from cogs.birthday.utils import *
from datetime import datetime





class Birthday(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.config = bot.config
        self.birthdays_notify.start()

    @tasks.loop(minutes=1)
    async def birthdays_notify(self):
        timezone = pytz.timezone("Europe/Moscow")
        time = datetime.now(timezone)
        if time.hour == 11 and time.minute == 25:


            download = downloadShedule()
            if not download:
                print("Download failed")
            wb = load_workbook('cogs/birthday/birthdays.xlsx')
            path = './files/photo/birthday/'
            sheet = wb['ะะธัั1']

            channel = await self.bot.fetch_channel(self.config['channel']['main'])



            row_count = 5
            column_count = 2

            birthday_names = []

            while column_count != 14:
                name = sheet.cell(row = row_count, column = column_count).value
                while name:
                    name = name.split('-')
                    day = name[0].strip()
                    # print(name[1].split(','))
                    id = name[1].split(',')[2].strip()
                    name = name[1].split(',')[0].strip()
                    birthday_names.append({'day': int(day), 'month': column_count - 1, 'name': name, 'uid': id})
                    row_count += 1
                    name = sheet.cell(row = row_count, column = column_count).value
                column_count += 1
                row_count = 5


            for person in birthday_names:
                # print(time.day, person['day'], time.month, person['month'])
                if time.day == person['day'] and time.month == person['month']:
                    texts = [
                        f'ะกะปััั, <@{person["uid"]}>, ะฟะพะทััะธะป ัะฒะพะธ ัะพัะบะธ, ัั ะฟััะผ ะบะฐะนัะพะฒะฐั. ะั ัะธะฟ ะณะปะฐะทะฐ ัะพะฒะฝะพ ัะผะพัััั ะฝะต ะบะพััะต, ะฝะพั ะฝะต ะดะพ ะฟะพะดะฑะพัะพะดะบะฐ, ะทัะฑั ะฒัะพะดะต ะฒัะต ะฝะฐ ะผะตััะต, ะฟัััะตะน ะฝะฐ ะปะธัะต ะฝะตั, ััะปะพะฒะธัะต ัะพะถะต ะฒ ัะพัะพัะพะผ ัะพััะพัะฝะธะน. ะะพะณะธ ัะพะดัั, ััะบะธ ะดะตัะถะฐั ะฒัะต ะบะฐะบ ะฝะฐะดะพ, ะทะฑั ะฟััะผ. ะขั ะฝะพัะผ. ะขั ะผะพะปะพะดะตั. ะะฐะน ะฑะพะณ ัะตะฑะต ะทะดะพัะพะฒัั.\n ะก ะดะฝัะผ ัะพะถะดะตะฝัั!',
                        f'<@{person["uid"]}> ัะฐะฝัะฐััะธัะตัะบะธ ะบัะฐัะธะฒะฐั, ั ะฟัะพััะพ ััะตั ั ัะฒะพะธั ัะตัั ะปะธัะฐ ะธ ะพัะพะฑะตะฝะฝะพ ัะปัะฑะบะฐะฐะฐะฐ... ั ัะปะตะถั ะทะฐ ัะพะฑะพะน ั ัะฐะผะพะณะพ ะฝะฐัะฐะปะฐ, ะฝั ะฝะต ะฟััะผ ัะฐะบ ัะปะตะถั, ะฝั ะบะพัะพั ะฝะต ัััั, ะฒะพั ัะฐะบ ัะผะพััั ะฝะฐ ัะตะฑั ะธ ะผะฝะต ะบะฐะถะตััั , ััะพ ัั ะบะฐะบ ะฑัะดัะพ ะฝะต ะฒ ัั ะถะธะทะฝะตะฝะฝัั ัะฐัะตะปะบั ะฟะพะฟะฐะปะฐ, ัั ะบะฐะบ ะฑัะดัะพ ะฒ ะทะฐะฟะตััะธ ะธ ะฑะพะธัััั ะฒัะนัะธ, ะบะฐะถะตััั ัั ะดะพะปะถะฝะฐ ัะพะดะธัั ะฟะพ ะบะปัะฑะฐะผ ะฑััะฐัั ะณัะปััั ะธ ัะด , ะฟัะพััะธ ะตัะปะธ ััะนะฝั ะฝะตัั , ั ะฒะพะพะฑัะต ัะท ะฟะพัะตะผั ัะตัะธะป ัะตะฑะต ะฝะฐะฟะธัะฐัั ะฝั ะฟะพั!ะั ัั ะฟััะผ ัะพัะพัะฝะฐั , ะดะตะปะฐะน ะฑะพะปััะต ัะพัะพะบ ะธ ัะปัะฑะฐะนัั ัะตะฑะต ะพัะตะฝั ะธะดัั , ะฟัะฐะฒะดะฐ !\n ะก ะดะฝัะผ ัะพะถะดะตะฝัั!',
                        f'ะก ะดะฝััะพะน ัะตะฑั, <@{person["uid"]}>! ะก ัะพัะพะบะฐ ั ัะตะผ ัะพ ะปะตัะธะตะผ!',
                        f'ะกะตะณะพะดะฝั ะพัะพะฑะตะฝะฝัะน ะดะตะฝั ะดะปั <@{person["uid"]}>! ะะพะทะดัะฐะฒะปัั ั ะะฝัะผ ะฒะฐัะตะฝัั - ะถะตะปะฐั ััะฟะตัะพะฒ ะฒ ะปัะฑะพะผ ะดะตะปะต, ัะฐะดะพััะธ ะธ ะฟัะพัะฒะตัะฐะฝะธั!',
                        f'ะัะธะฒะตั, <@{person["uid"]}>! ะกะตะณะพะดะฝั ัะฒะพะน ะะตะฝั ัะพะถะดะตะฝัั - ัะฐะผะพะต ะฒัะตะผั ะฟัะพะฒะตััะธ ะตะณะพ ะฒ ะพัะปะธัะฝะพะน ะบะพะผะฟะฐะฝะธะธ. ะขะฐะบะพะต ัะพะปะฝััะบะพ ะบะฐะบ ัั ัะดะตะปะฐะตั ะปัะฑะพะน ะดะตะฝั ะปัััะต!',
                        f'<@{person["uid"]}>\n๐น๐ะะธะปะพ๐๐น ๐ธ๐ะฏัะบะพ๐๐ธ ๐๐ะัะฐัะพัะบะฐ๐ ๐ฟ๐ะกะฝะพะณัะตะฑะฐัะตะปัะฝะฐ๐๐ฟ ๐๐๐๐ ๐๐ะัััะพ๐๐ โจ๐ะะตะปะตะบะพะปะตะฟะฝะพ๐โจ ๐๐ะขะะ๐๐ ๐ฌ๐ญะะพะฝัะตัะบะฐ๐ญ๐ฌ ๐๐ะััะฝะพ๐๐ ๐บ๐ะะพ ะบะพัะพะปะตะฒัะบะธ๐๐บ ๐พ๐ปะัะปะตะฟะธัะตะปัะฝะพ๐ป๐พ ๐ฐ๐นะะฐะนะบะฐ๐น๐ฐ ๐ฑ๐ตะะธะปะฐัั๐ต๐ฑ ๐ณ๐ะะต ััััั,ะฐ ัะพะฝัะฐะฝ๐ณ๐\n ะก ะดะฝัะผ ัะพะถะดะตะฝัั!',
                        f'<@{person["uid"]}>\n, ัะฐะบ ัะตะณะพ ั ะฟะธัั ัะพ, ั ะดั ัะตะฑั. ะจะพะฑ cock ััะพัะป ะธ ะดะตะฝัะณะธ ะฑัะปะธ<:HmmFlower:861241411805642782>',
                        ]
                    photo = path + choice(listdir(path))
                    print(f'ะกะตะณะพะดะฝั ะดั ั {person["name"]}, {photo}')
                    file = File(photo)
                    text = choice(texts)
                    await channel.send(content=text, file=file)



def setup(bot):
    bot.add_cog(Birthday(bot))
