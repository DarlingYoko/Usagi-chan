from src.functions import wrongMessage, getCurrentTime, createEmbed, newLog
from time import mktime
from datetime import datetime
import sys



async def createRequest(self, message, command):
    try:
        if message.channel.id != self.config['requestsData'].getint('channel'):
            title = '–í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!'
            description = '–í–∞–º —Å—é–¥–∞ üëâ <#{0}>'.format(self.config['requestsData']['channel'])
            await wrongMessage(message = message, title = title, description = description)
            return


        msg = message.content.split(command)[1].split()
        messageChannel = self.client.get_channel(self.config['requestsData'].getint('channel'))
        counter = {2: '2Ô∏è‚É£', 3: '3Ô∏è‚É£', 4: '4Ô∏è‚É£'}
        serversId = {6: '–ê–º–µ—Ä–∏–∫–∞', 7: '–ï–≤—Ä–æ–ø–∞', 8: '–ê–∑–∏—è', 9: '–¢–∞–π–≤–∞–Ω—å'}
        # 6 706251801 3  –ê–∂–¥–∞—Ö–∞ 90–ª–≤–ª, —Ä–∞–Ω–¥–æ–º—ã –æ—Ç–∫–∏—Å–∞—é—Ç —É–∂–µ 6 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥, –º–æ–≥—É –Ω–∞ –¥–∏–æ–Ω–µ –ø–æ –∫–¥ —â–∏—Ç—ã —Å—Ç–∞–≤–∏—Ç—å
        if len(msg) < 4:
            title = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞. –ü—Ä–æ—á—Ç–∏—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å!'
            description = ''':round_pushpin: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `!—Å–æ–∑–¥–∞—Ç—å <world> <id> <slots> <message>`
                             :round_pushpin: –ü—Ä–∏–º–µ—Ä: `!—Å–æ–∑–¥–∞—Ç—å 7 7000563212 3 –§–∞—Ä–º–∏–º —Ä–æ—Ñ–ª–æ—á—É—Ä–ª–æ–≤`
                             **–ü–†–ò–ú–ï–ß–ê–ù–ò–ï**: –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã **–ø—Ä–æ–±–µ–ª–æ–º**'''
            await wrongMessage(message = message, title = title, description = description, delay = 60)
            return

        try:
            lvlWorld = int(msg[0])
            if lvlWorld > 8 or lvlWorld < 1:
                title = '–ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –º–∏—Ä–∞!'
                description = '**–£—Ä–æ–≤–µ–Ω—å –º–∏—Ä–∞** –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ `8` –∏–ª–∏ –º–µ–Ω—å—à–µ `1`'
                await wrongMessage(message = message, title = title, description = description)
                return
        except:
            title = '–ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –º–∏—Ä–∞!'
            description = '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç **—É—Ä–æ–≤–Ω—è –º–∏—Ä–∞**, –æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã –æ—Ç `1` –¥–æ `8`'
            await wrongMessage(message = message, title = title, description = description)
            return


        try:
            length = len(msg[1])
            UID = int(msg[1])
            if length > 9 or length < 9:
                title = '–ù–µ–≤–µ—Ä–Ω—ã–π UID!'
                description = '**UID** –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ `9` —Ü–∏—Ñ—Ä'
                await wrongMessage(message = message, title = title, description = description)
                return

            firstSymbol = int(msg[1][0])
            if firstSymbol not in serversId.keys():
                title = '–ù–µ–≤–µ—Ä–Ω—ã–π UID!'
                description = '–°–µ—Ä–≤–µ—Ä–∞ —Å —Ç–∞–∫–∏–º **UID** –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ **UID**.'
                await wrongMessage(message = message, title = title, description = description)
                return

            server = serversId[firstSymbol]

        except:
            title = '–ù–µ–≤–µ—Ä–Ω—ã–π UID!'
            description = '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç **UID**, –æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –¥–µ–≤—è—Ç–∏ —Ü–∏—Ñ—Ä'
            await wrongMessage(message = message, title = title, description = description)
            return

        try:
            numberOfSlots = int(msg[2])
            if numberOfSlots > 3 or numberOfSlots < 1:
                title = '–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤!'
                description = '–ò—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ `3` –∏ –Ω–µ –º–µ–Ω—å—à–µ `1`'
                await wrongMessage(message = message, title = title, description = description)
                return
        except:
            title = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–ª–æ—Ç–æ–≤!'
            description = '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç **—Å–ª–æ—Ç–∞**, –æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã –æ—Ç `1` –¥–æ `3`'
            await wrongMessage(message = message, title = title, description = description)
            return

        text = ' '.join(msg[3:])
        slots = '***1) –°–ª–æ—Ç:** <@{0}>*\n'.format(message.author.id)



        for i in range(numberOfSlots):
            slots += '***{0}) –°–ª–æ—Ç:** –ü—É—Å—Ç–æ*\n'.format(i + 2)


        authorName = '{0} —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É.'.format(message.author.display_name)
        authorIconURL = message.author.avatar_url
        description = ':park: **–ú–∏—Ä:** {0} —É—Ä–æ–≤–Ω—è\n:label: **UID:** {1}\n:map: **–°–µ—Ä–≤–µ—Ä:** {4}\n:busts_in_silhouette: **–°–ª–æ—Ç—ã:**\n{3}:pencil: **–û–ø–∏—Å–∞–Ω–∏–µ:** {2}'.format(lvlWorld, UID, text, slots, server)
        footer = '–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ {0} –ø–æ –ú–°–ö'.format(getCurrentTime())
        time = mktime(datetime.now().timetuple())

        embed = createEmbed(description = description, thumbnail = self.config['requestsData']['thumbnail'], footer = footer, authorName = authorName, authorIconURL = authorIconURL, color = 0xf08080)
        timeMsg = await messageChannel.send('<@&{}>'.format(self.config['requestsData']['roleID']), embed = embed)

        await timeMsg.add_reaction('üîí')
        for i in range(numberOfSlots):
            await timeMsg.add_reaction(counter[i + 2])

        try:
            await timeMsg.pin()
        except:
            pass



        userId = message.author.id
        msgIds = self.db.getValue(tableName = 'requestsData', argument = 'requests_ids', selector = 'user_id', value = userId)
        if msgIds:
            msgIds = eval(msgIds)
            msgIds.append(timeMsg.id)
            self.db.update(tableName = 'requestsData', argument = 'requests_ids', selector = 'user_id', newValue = str(msgIds), findValue = userId)

        else:
            msgIds = [timeMsg.id]
            self.db.insert('requestsData', userId, str(msgIds))

        self.db.insert('emojidata', timeMsg.id, str({}), time, userId)
        await message.delete()
    except Exception as e:
        exc_type, exc_obj, exc_tb = sys.exc_info()
        newLog(exc_type, exc_obj, exc_tb, e)
